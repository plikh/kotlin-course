package com.pavel.likholap.lesson10

fun main(){

//Задание 1: Создание Пустого Множества
//Создайте пустое неизменяемое множество целых чисел.
    val set1: Set<Int> = setOf()

//Задание 2: Создание и Инициализация Множества
//Создайте неизменяемое множество целых чисел, содержащее три различных элемента (например, 1, 2, 3).
    val set2: Set<Int> = setOf(1, 2, 3)

//Задание 3: Создание Изменяемого Множества
//Создайте изменяемое множество строк и инициализируйте его несколькими
//значениями (например, "Kotlin", "Java", "Scala").
    val set3: MutableSet<String> = mutableSetOf("Kotlin", "Java", "Scala")

//Добавление Элементов в Множество
//Имея изменяемое множество строк, добавьте в него новые элементы (например, "Swift", "Go").
    val set4: MutableSet<String> = mutableSetOf()

    for (i in listOf("Swift", "Go", "C#")){
        set4.add(i)
    }

//Задание 5: Удаление Элементов из Множества
//Имея изменяемое множество целых чисел, удалите из него определенный элемент (например, 2).
    val set5: MutableSet<Int> = mutableSetOf(1, 2, 3, 4, 5)
    set5.remove(2)
    println(set5)

//Задание 6: Перебор Множества в Цикле
//Создайте множество целых чисел и используйте цикл для вывода каждого элемента на экран.
    for (i in mutableSetOf(0, 23, 45, 66, 32)){
        println(i)
    }

//Задание 7: Проверка Наличия Элемента в Множестве
//Создай функцию, которая принимает множество строк (set) и строку и проверяет, есть ли в множестве указанная строка.
// Нужно вернуть булево значение true если строка есть. Реши задачу через цикл.
    fun findString(set: Set<String>, str: String): Boolean{
        var result: Boolean = false
        for (i in set){
            if (i == str) {
                result = true
                break
            }
        }
    return  result
    }

//Задание 8: Объединение Двух Множеств
// Создайте два множества строк и объедините их в одно новое множество,
//содержащее все уникальные элементы обоих множеств. Реши задачу с помощью циклов.
    val set81 = setOf(1, 2, 3, 4)
    val set82 = setOf(3, 4, 5, 6)
    val set83: MutableSet<Int> = mutableSetOf()
    for (i in set81.indices){
        set83.add(set81.elementAt(i))
        set83.add(set82.elementAt(i))
    }

//Задание 9: Нахождение Пересечения Множеств
//Создайте два множества целых чисел и найдите их пересечение (общие элементы). Реши задачу через вложенные циклы.
    val set91 = setOf(1, 2, 3, 4)
    val set92 = setOf(3, 4, 5, 6)
    val set93: MutableSet<Int> = mutableSetOf()
    for (i in set91){
        for (j in set92){
            if (i == j){
                set93.add(i)
            }
        }
    }

//Задание 10: Нахождение Разности Множеств
//Создайте два множества строк и найдите разность первого множества относительно второго
// (элементы, присутствующие в первом множестве, но отсутствующие во втором).
// Реши задачу через вложенные циклы и переменные флаги
    val set101 = setOf("1", "2", "3", "4")
    val set102 = setOf("3", "4", "5", "6")
    val set103: MutableSet<String> = mutableSetOf()
    for (i in set101){
        if (!set102.contains(i)){
            set103.add(i)
        }
    }

//Задание 11: Конвертация Множества в Список
//Создайте множество строк и конвертируйте его в список с использованием цикла.
    val set11 = setOf("1", "2", "3", "4")
    val lst: MutableList<String> = mutableListOf()
    for (i in set11){
        lst.add(i)
    }

}